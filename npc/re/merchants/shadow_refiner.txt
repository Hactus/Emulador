//===== Venus Script =========================================
//= Shadow Blacksmith
//===== Por: =================================================
//= rAthena Dev Team / skb_ (CreativeSD Translation)
//===== Versão atual: ========================================
//= 1.1
//===== Compatível com: ======================================
//= rAthena Project / Venus-Emulator
//===== Descrição: ===========================================
//= [Official Conversion]
//= Shadow equipments refining NPC.
//===== Comentários Adicionais: ==============================
//= 1.0 First version [Aleos]
//= 1.1 Removed re-roll behavior and fetch materials from db
//=     [Secret]
//============================================================

-	script	::ShadowBlacksmith	-1,{

OnMenuShadow:

	.@zeny_cost = 200000; // Zeny cost is 200,000 according to official script [Secret]
	disable_items;
	mes "[Ferreira Sombria]";
	mes "Você quer refinar um item de sombra? Escolha seu veneno!";
	next;
	setarray .@indices[1], EQI_SHADOW_ARMOR, EQI_SHADOW_WEAPON, EQI_SHADOW_SHIELD, EQI_SHADOW_SHOES, EQI_SHADOW_ACC_R, EQI_SHADOW_ACC_L;
	.@indlen = getarraysize(.@indices) - 1;
	for(.@i = 1; .@i <= .@indlen; .@i++)
		.@menu$ = .@menu$ + (getequipisequiped(.@indices[.@i]) ? getequipname(.@indices[.@i]) : F_getpositionname(.@indices[.@i]) +"-[Não equipado]") +":";
	.@menu$ = .@menu$ + "Informações do Refinamento";
	.@choice = select(.@menu$);
	if (.@choice == .@indlen + 1) { // Refine info
		mes "[Ferreira Sombria]";
		mes "Quando um item de sombra é refinado, ele recebe bônus extras muito parecidos com itens normais.";
		next;
		mes "[Ferreira Sombria]";
		mes "Arma: ATQ, ATQM + 1 aumenta para cada +1 de refinamento sucedido.";
		mes "Etc: HP + 10 aumenta pracada cada +1 de refinamento sucedido.";
		next;
		mes "[Ferreira Sombria]";
		mes "Todos os tipos de Oridecon e Elunium podem ser usados para refinar itens de sombra. Cada tentativa também custará 20.000 zeny.";
		next;
		mes "[Ferreira Sombria]";
		mes "Os minérios perfeitos podem ser usados para equipamentos que estejam no mínimo nível +7 de refinamento, e evitará que se quebrem enquanto você esteja falando comigo.";
		close;
	}

	.@part = .@indices[.@choice];

	if (!getequipisequiped(.@part)) {
		mes "[Ferreira Sombria]";
		mes "Não há nada aqui!";
		close;
	}
	.@equip_id = getequipid(.@part);
	setarray .@card[0], getequipcardid(.@part,0), getequipcardid(.@part,1), getequipcardid(.@part,2), getequipcardid(.@part,3);

	while(1) {
		.@equip_refine = getequiprefinerycnt(.@part);
		mes "[Ferreira Sombria]";
		mes "Eu preciso de " + callfunc("F_InsertComma", .@zeny_cost) + " zenys como uma taxa para cada tentativa de refinamento.";
		mes "Escolha o seu minério e comece a refinar.";
		next;

		.@material[0] = getequiprefinecost(.@part, REFINE_COST_NORMAL, REFINE_MATERIAL_ID);
		.@material[1] = getequiprefinecost(.@part, REFINE_COST_ENRICHED, REFINE_MATERIAL_ID);
		.@material[2] = getequiprefinecost(.@part, REFINE_COST_HD, REFINE_MATERIAL_ID);
		.@is_enriched = false;

		if (countitem(.@material[0]))
			.@mate$[0] = getitemname(.@material[0]);
		else
			.@mate$[0] = "^8C8C8C"+ getitemname(.@material[0]) +"^000000";
		if (countitem(.@material[1]))
			.@mate$[1] = getitemname(.@material[1]);
		else
			.@mate$[1] = "^8C8C8C"+ getitemname(.@material[1]) +"^000000";
		if (.@equip_refine > 6 && countitem(.@material[2]))
			.@mate$[2] = getitemname(.@material[2]);
		else
			.@mate$[2] = "^8C8C8C"+ getitemname(.@material[2]) +"^000000";

		switch( select( .@mate$[0], .@mate$[1], .@mate$[2], "Cancelar" ) ) {
		case 1:// NORMAL
			.@choose = .@material[0];
			break;
		case 2:// ENRICHED
			.@is_enriched = true;
			.@choose = .@material[1];
			break;
		case 3:// HD
			if (.@equip_refine < 7) {
				mes "[Ferreira Sombria]";
				mes "Os minérios perfeitos só podem ser usados para itens com nível +7 de refinamento ou superior.";
				close;
			}
			.@hoihoi = 1;
			.@choose = .@material[2];
			break;
		case 4:
			mes "[Ferreira Sombria]";
			mes "Você cancelou o refinamento.";
			close;
		}
		if (!countitem(.@choose)) {
			mes "[Ferreira Sombria]";
			mes "Você não tem "+ getitemname(.@choose) +" suficiente.";
			close;
		}
		if (Zeny < .@zeny_cost) {
			mes "[Ferreira Sombria]";
			mes "Você não tem zeny suficiente.";
			close;
		}
		if (.@equip_refine > 9) {
			mes "[Ferreira Sombria]";
			mes "Equipamentos Sombrios só podem ser refinado até o máximo de 10 ...";
			close;
		}
		if (!getequipisenableref(.@part)) {
			mes "[Ferreira Sombria]";
			mes "Este item não pode ser refinado.";
			close;
		}
		if (getequippercentrefinery(.@part) < 100) {
			mes "[Ferreira Sombria]";
			mes "O nível de refinamento de segurança para o Equipamentos Sombrios é de +4.";
			if (!.@hoihoi)
				mes "Equipamentos Sombrios podem ser destruídos em refinamentos subseqüentes. Quer começar?";
			else
				mes "O próximo refinamento, caso falhe, degradará o refinamento. Você quer refinar?";
			next;
			if (select("Prosseguir","Cancelar") == 2) {
				mes "[Ferreira Sombria]";
				mes "Heh, eu sabia disso!";
				close;
			}
		}
		mes "[Ferreira Sombria]";
		mes "Bem, então.. tudo ou nada!";
		next;
		delitem .@choose,1;
		Zeny -= .@zeny_cost;

		// anti-hack
		if (callfunc("F_IsEquipIDHack", .@part, .@equip_id) || callfunc("F_IsEquipCardHack", .@part, .@card[0], .@card[1], .@card[2], .@card[3]) || callfunc("F_IsEquipRefineHack", .@part, .@equip_refine))
			close;

		if (getequippercentrefinery(.@part, .@is_enriched) > rand(100)) {
			successrefitem .@part;
			mes "[Ferreira Sombria]";
			mes "Funcionou! Funcionou!";
			next;
		} else {
			if (.@hoihoi)
				downrefitem .@part;
			else
				failedrefitem .@part;
			mes "[Ferreira Sombria]";
			mes "Oh Odin Não!";
			close;
		}
	}
}

//moc_paraup,45,185,5	duplicate(ShadowBlacksmith)	Ferreira Sombria#eden1	4_F_JOB_BLACKSMITH // Commented out until it's added to the map index
prt_in,61,54,3	duplicate(ShadowBlacksmith)	Ferreira Sombria#itemmall	4_F_JOB_BLACKSMITH