//====================================================================================
//Script Name: Vote For point NPC Script for FluxCP
//SVN: Tested in rAthena r156513
//Developed By: JayPee Mateo
//Version: 1.0
//Requirement(s): FluxCP V4P Addon
//Description: This is a npc script for FluxCP Vote for point in order for the players
//to claim their vote point
//====================================================================================

prontera,140,196,3	script	Gerenciador de Pontos	4_M_ORIENT02,{


//Function Prototypes
function garbagecol;//Garbage collection for the Character variables
garbagecol();
function add_item; //Syntanx: add_item(ITEMID,QUANTITY,point,CATEGORY);
function makeCategory;//This will return a list of the categories
function getItemsByCat;//This will return the list of items associated to the particular category
function getItemDetails;//This will return the details of the item
function getpoint;//This will return the point of the player stored in the database
function updatepoint;//This will updates the point of the player stored in the database


//NPC Name
set .npcname$,"[ Vote Por Pontos ]";
	
//Initialization of the Rewards
add_item(20672,1,3,"VIP");
add_item(20676,1,6,"VIP");
add_item(20669,1,19,"VIP");
add_item(20670,1,40,"VIP");
add_item(20671,1,70,"VIP");
add_item(12264,3,4,"Variados");
add_item(12218,5,2,"Variados");
add_item(14521,5,2,"Variados");

//Script Start	
	set .@point,getpoint(getcharid(3));
	mes .npcname$;
	mes "Olá, você tem "+.@point+" Pontos, deseja trocar seus pontos?:";
	switch(select("Sim, quero trocar meus pontos:Não"))
	{
		case 1:
		
			if (!checkweight(1202,(+1))) { 
			next;
			mes .npcname$;
			mes "^3355FFEspere só um momento!!!";
			mes "Eu não posso te entregar nada, esvazie seu inventário e volte aqui.";
			close;
			}

		
		next;
			mes .npcname$;
			mes "Por favor escolha o item desejado:";
			set .@selected,select(makeCategory())-1;
		next;
			mes .npcname$;
			mes "Selecione o item desejado:";
			set .@selected,select(getItemsByCat(@listCat$[.@selected]))-1;		
		next;
			mes .npcname$;						
			set .@ritemid,getItemDetails(@itemKeys[.@selected],"itemid");
			set .@rquantity,getItemDetails(@itemKeys[.@selected],"quantity");
			set .@rpoint,getItemDetails(@itemKeys[.@selected],"point");
			mes "Nome do Item: "+getitemname(.@ritemid);
			mes "Quantidade: "+.@rquantity+" pc(s).";
			mes "Pontos necessários: "+.@rpoint+" pt(s).";
			mes "\n";
			mes "Você quer mesmo trocar?";
			if(select("Sim:Não")==1)
			{
				set .@point,getpoint(getcharid(3));
				if(.@point>=.@rpoint)
				{
					next;
					mes .npcname$;			
					updatepoint(getcharid(3),.@rpoint);
					getitem .@ritemid,.@rquantity;
					mes "Aí está, obrigado por votar, e continue votando sempre! :D";
				}
				else
					next;
					mes "Desculpe-me, você não tem pontos necessários para este item.";				
			}
			else
			{
				next;
				mes .npcname$;			
				mes "Ok até breve!";
			}			
			garbagecol();
		close;
		case 2:
		close;
	}
end;

//Functions Bodies
	function updatepoint {
		set .@account_id,getarg(0);
		set .@usedpoint,getarg(1);
		query_sql("UPDATE `cp_v4p_voters` SET `points`=`points`-"+.@usedpoint+" WHERE `account_id`='"+ getcharid(3) +"'");
		return;
	}

	function getpoint {
		set .@account_id,getarg(0);
		query_sql("SELECT `points` FROM `cp_v4p_voters` WHERE `account_id` = '"+ getcharid(3) +"'",.@point);
		if(getarraysize(.@point)==0)
			return 0;
		return .@point[0];
	}

	function getItemDetails {
		set .@key,getarg(0); //Key
		set .@detail$,getarg(1); //What details to return such as ItemID, point, Quantity, Category
		
		if(strtolower(.@detail$) == strtolower("ItemID"))
			return @itemID[.@key];
		else if(strtolower(.@detail$) == strtolower("Quantity"))
			return @itemQ[.@key];
		else if(strtolower(.@detail$) == strtolower("point"))
			return @point[.@key];
		else if(strtolower(.@detail$) == strtolower("Category"))
			return @category$[.@key];
	}

	function getItemsByCat {		
		set .@selectedCat$,getarg(0);
		set .@make_string$,"";
		set .@x,0;
		for(set .@i,0; .@i<getarraysize(@category$); set .@i,.@i+1)
		{
			if(strtolower(.@selectedCat$) == strtolower(@category$[.@i]))
			{
				setarray @itemKeys[.@x],.@i;
				if(.@make_string$ == "")
					set .@make_string$,getitemname(@itemID[.@i]);
				else
					set .@make_string$,.@make_string$+":"+getitemname(@itemID[.@i]);
				
				set .@x,.@x+1;
			}
		}
		return .@make_string$;
	}
	
	
	function makeCategory {
		set .@make_string$,"";
		for(set .@i,0; .@i<getarraysize(@category$); set .@i,.@i+1)
		{			
			if(.@make_string$ == "")
			{
				setarray @listCat$[getarraysize(@listCat$)],@category$[.@i];
				set .@make_string$,@category$[.@i];
			}
			else
			{
				if(compare(.@make_string$,@category$[.@i])==0)
				{
					setarray @listCat$[getarraysize(@listCat$)],@category$[.@i];
					set .@make_string$,.@make_string$+":"+@category$[.@i];				
				}
			}
		}
		return .@make_string$;
	}
			
	function add_item
	{
		set .@itemID,getarg(0,-1); //IteID
		set .@itemQ,getarg(1,-1); //Item Quantity
		set .@point,getarg(2,-1);
		set .@cat$,getarg(3,"Uncategorized"); //Category
		
		
		if(.@itemID == -1)
		{
			debugmes "Invalid Item ID. Script not completely loaded.";
			end;
		}
		else if(.@itemQ == -1)
		{
			debugmes "Invalid Item Quantity. Script not completely loaded.";
			end;
		}
		else if(.@point == -1)
		{
			debugmes "point assignment error. Script not completely loaded.";
			end;
		}
		set .@key,getarraysize(@itemID);
		setarray @itemID[.@key],.@itemID;
		setarray @itemQ[.@key],.@itemQ;
		setarray @point[.@key],.@point;
		setarray @category$[.@key],.@cat$;
		return 1; //return 1 as success
	}
	
	function garbagecol{
		deletearray @itemID[0],128;
		deletearray @itemQ[0],128;
		deletearray @point[0],128;	
		deletearray @category$[0],128;	
		deletearray @listCat$[0],128;
		deletearray @itemKeys[0],128;
		return;
	}
}