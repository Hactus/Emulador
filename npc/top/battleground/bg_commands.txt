/*.---------------------------------------------------------------------.
  .		 ____                          __                          		.
  .		/\  _`\                       /\ \__  __                   		.
  .		\ \ \/\_\  _ __    __     __  \ \ ,_\/\_\  __  __     __   		.
  .		 \ \ \/_/_/\`'__\/'__`\ /'__`\ \ \ \/\/\ \/\ \/\ \  /'__`\ 		.
  .		  \ \ \s\ \ \ \//\  __//\ \d\.\_\ \ \_\ \ \ \ \_/ |/\  __/ 		.
  .		   \ \____/\ \_\\ \____\ \__/.\_\\ \__\\ \_\ \___/ \ \____\		.
  .		    \/___/  \/_/ \/____/\/__/\/_/ \/__/ \/_/\/__/   \/____/		.
  .																		.
  .				2014~2015 © Creative Services and Developent			.
  .						  www.creativesd.com.br							.
  .					    www.sbkmod.ragnagreen.com                       .
  .---------------------------------------------------------------------.
  . Script:													            .
  .	   Comandos de Ineração                                             .
  .---------------------------------------------------------------------.
  . Autor: Romulo SM (sbk_)                                 Versão: 4.7	.
  .                                                                     .
  . Compátivel:	rAthena / Hercules e derivações.                    	.
  .---------------------------------------------------------------------.
  . Descrição:															.
  .	   Todos os comandos relacionado a sistema de batalhas.             .
  *---------------------------------------------------------------------*/
// Carrega os comandos.
//
-	script	bgcommand#main	-1,{

OnInit:
	.@g_player = callfunc("bg_getconfiginfo", "ATCMD");
	.@g_admin = callfunc("bg_getconfiginfo", "GROUP");
	
	bindatcmd "bgjoin", "bgcommand#join::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgregister", "bgcommand#register::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgunregister", "bgcommand#unregister::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgleave", "bgcommand#leave::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgmsg", "bgcommand#changemsg::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgranking", "bgcommand#ranking::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgwaiting", "bgcommand#waiting_playing::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgplaying", "bgcommand#waiting_playing::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgafk", "bgcommand#afk::OnAtCommand", .@g_player, .@g_admin;
	bindatcmd "bgkick", "bgcommand#kick::OnAtCommand", .@g_player, .@g_admin;
	end;
}

// Sistema de Reportagem de Jogadores Inativos.
//
-	script	bgcommand#afk	-1,{

OnAtCommand:
	if( .@atcmd_numparameters )
	{
		query_sql "SELECT `char_id` FROM `char` WHERE `name` LIKE '%" + .@atcmd_parameters$[0]  + "%' AND `online`='1'", .@char_id;
		if( getarraysize(.@char_id) )
		{
			.@bg_id = callfunc("bg_getplayerbgid", .@char_id[0], 1);
			if( .@bg_id )
			{
				attachnpctimer .@atcmd_parameters$[0];
				initnpctimer "bgcommand#afk";
				message strcharinfo(0), "Jogador " + .@atcmd_parameters$[0] + " foi reportado ao Sistema.";
				end;
			}
			else
				message strcharinfo(0), "Jogador " + .@atcmd_parameters$[0] + " não está participando de uma Batalha.";
		}
		else
			message strcharinfo(0), "Jogador " + .@atcmd_parameters$[0] + " não existe ou não está on-line.";
	}
	
	message strcharinfo(0), "Para utilizar o comando digite @bgafk <nome do jogador>.";	
	end;
	
OnTimer1000:
	message strcharinfo(0), "[Batalhas Campais]: Você foi reportado por inatividade.";
	message strcharinfo(0), "[Batalhas Campais]: Você tem 10 segundos para entrar em atividade.";
	set BG_AFK_CHECK, 1;
	end;
	
OnTimer2000:
OnTimer3000:
OnTimer4000:
OnTimer5000:
OnTimer6000:
OnTimer7000:
OnTimer8000:
OnTimer9000:
OnTimer10000:
	if( checkidle() <= 0 )
	{
		set BG_AFK_CHECK, 0;
		stopnpctimer;
	}
	end;

OnTimer11000:
	if( BG_AFK_CHECK )
	{
		bg_leave;
		message strcharinfo(0), "Retirado da Batalha por inatividade....";
		.@bg_id = callfunc("bg_getplayerbgid",getcharid(0),1);
		if( .@bg_id )
		{
			bg_skill 0,strcharinfo(0);
			update_bg_position 0, 0, strcharinfo(0);
			.@m$ = callfunc("bg_getarenainfo",.@bg_id,"map_event");
			if( strcharinfo(3) == .@m$ )
			{
				callfunc "bg_queue_func", 4, .@bg_id, getcharid(0), 0, 1;
				doevent callfunc("bg_getarenainfo", .@bg_id, "npc_walkover_event");
				sleep2 2000;
				mapannounce strcharinfo(3), "O Jogador [" + strcharinfo(0) + "] foi retirado da Batalha por inatividade.", bc_map, "0xFFCE00";
				warp "prontera", 156, 176;
			}
		}
	}
	stopnpctimer;
	end;
}

// Abre votação para retirar um jogador da Batalha.
//
-	script	bgcommand#kick	-1,{
OnAtCommand:
	if( !getcharid(4) )
		message strcharinfo(0), "Você não está participando de uma Batalha Campais.";
	else if( .@atcmd_numparameters )
	{
		query_sql "SELECT `char_id`, `account_id` FROM `char` WHERE `name` LIKE '%" + .@atcmd_parameters$[0] + "%' AND `online`='1'", .@char_id, .@aid;
		if( getarraysize(.@char_id) )
		{
			.@bg_id = callfunc("bg_getplayerbgid", .@char_id[0], 1);
			if( getcharid(4) != getcharid(4,.@atcmd_parameters$[0]) )
				message strcharinfo(0), "Você deve estar no mesmo Exército que o jogador se encontra nas Batalhas.";
			else if( .@bg_id )
			{
				.@last_aid = getcharid(3);
				.@check = 0;
				detachrid; 
				if( attachrid(.@aid[0]) )
				{
					.@army = callfunc("bg_getplayerarmy", getcharid(0), 1);
					if( .@army >= 0 )
					{
						BG_KICK_COUNT++;
						.@countplayers = callfunc("bg_queue_func", 5, .@bg_id, .@army)-1;
						
						if( BG_KICK_COUNT >= (.@countplayers/2) )
						{
							BG_KICK_COUNT = 0;
							callfunc "bg_queue_func", 4, .@bg_id, getcharid(0), 0, 1;
							doevent callfunc("bg_getarenainfo", .@bg_id, "npc_walkover_event");
							sleep2 2000;
							mapannounce strcharinfo(3), "O Jogador [" + strcharinfo(0) + "] foi retirado da Batalha por inatividade.", bc_map, "0xFFCE00";
							warp "prontera", 156, 176;
							.@check = 2;
						}
						else
						{
							message strcharinfo(0), "Atenção! Foi aberto votação de voto para remoção de você na batalha!";
							.@check = 1;
						}
					}
					else { .@check = 0; }
					detachrid;
				}
				
				sleep 2000;
				if( attachrid(.@last_aid) )
				{
					if( .@check == 1 )
						message strcharinfo(0), "Seu voto foi computado com sucesso, é necessário metade da equipe utilizar o comando para poder remover o jogador.";
					else if( .@check == 2 )
						message strcharinfo(0), "O Jogador foi removido da Batalha.";
					else
						message strcharinfo(0), "Houve um erro ao computar seu voto.";
				}
				end;
			}
			else
				message strcharinfo(0), "Jogador " + .@atcmd_parameters$[0] + " não está participando de uma Batalha.";
		}
		else
			message strcharinfo(0), "Jogador " + .@atcmd_parameters$[0] + " não existe ou não está on-line.";
	}
	
	message strcharinfo(0), "Para utilizar o comando digite @bgkick <nome do jogador>.";
	end;
}

// Desliga mensagens enviada pelo sistema.
//
-	script	bgcommand#changemsg	-1,{

OnAtCommand:
	bg_enable_msg = (bg_enable_msg?0:1);
	message strcharinfo(0), "Aviso de quantidade de jogadores restantes para começar a Batalha " + (!bg_enable_msg?"Ativado":"Desativado") + ".";
	end;
}

// Remove um jogador de uma Batalha no qual está jogando.
//
-	script	bgcommand#leave	-1,{
OnAtCommand:
	.@bg_id = callfunc("bg_getplayerbgid", getcharid(0), 1);
	if( !getcharid(4) || !.@bg_id )
		message strcharinfo(0), "Você não está participando de uma Batalha Campal.";
	else {
		.@m$ = callfunc("bg_getarenainfo", .@bg_id, "map_event");
		bg_skill 0,strcharinfo(0);
		update_bg_position 0, 0, strcharinfo(0);
		if( strcharinfo(3) == .@m$ )
		{
			mapannounce .@m$, "O Jogador [" + strcharinfo(0) + "] se retirou da Batalha Campal.", bc_map, "0xFFCE00";
			sleep2 2000;
			warp "prontera", 156, 176;
		}
		sleep2 2000;
		doevent callfunc("bg_getarenainfo", .@bg_id, "npc_walkover_event");
	}
	end;
}

// Entra na batalha mais favorável de modo mais rápido.
//
-	script	bgcommand#join	-1,{
OnAtCommand:
	.@mode = callfunc("bg_getconfiginfo", "ARENA_MODE");
	if( callfunc("bg_getplayerbgid", getcharid(0), 0) )
		message strcharinfo(0), "Você já está registrado em uma Batalha, utilize o comando @bgunregister para desertar do alistamento.";
	else if( callfunc("bg_getplayerbgid", getcharid(0), 1) )
		message strcharinfo(0), "Você estava em uma Batalha, você deve aguardar até que a Batalha termine para poder se alistar novamente.";
	else if( .@mode )
	{
		// Checagem da 
		if( $BG_LAST_ARENA )
		{
			.@last_arena_id = $BG_LAST_ARENA;
			.@last_arena_group = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "group_id");
			.@last_var_event$ = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event");
			.@last_var_lock = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event_lock");
			.@last_max_player = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "max_player");
			.@last_status = callfunc("bg_getgroupinfo", .@last_arena_group, "status");
			.@last_total_guill_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 0);
			.@last_total_croix_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 1);
			.@last_baselevel = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "base_level");
		}
		
		if( $BG_ARENA )
		{
			.@new_arena_id = $BG_ARENA;
			.@new_arena_group = callfunc("bg_getarenainfo", $BG_ARENA, "group_id");
			.@new_var_event$ = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event");
			.@new_var_lock = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event_lock");
			.@new_max_player = callfunc("bg_getarenainfo", $BG_ARENA, "max_player");
			.@new_status = callfunc("bg_getgroupinfo", .@new_arena_group, "status");
			.@new_total_guill_w = callfunc("bg_queue_func", 1, $BG_ARENA, 0);
			.@new_total_croix_w = callfunc("bg_queue_func", 1, $BG_ARENA, 1);
			.@new_total_guill_p = callfunc("bg_queue_func", 5, $BG_ARENA, 0);
			.@new_total_croix_p = callfunc("bg_queue_func", 5, $BG_ARENA, 1);
			.@new_baselevel = callfunc("bg_getarenainfo", $BG_ARENA, "base_level");
		}
		
		if( .@last_arena_id && .@last_status && getd(.@last_var_event$) && getd(.@last_var_event$) < .@last_var_lock && (.@last_total_guill_p < .@last_max_player || .@last_total_croix_p < .@last_max_player) && BaseLevel >= .@last_baselevel )
		{
			.@register_id = .@last_arena_id;
			.@register_type = 1;
			.@register_army = (.@last_total_guill_p<=.@last_total_croix_p?0:1);
		}
		else if( .@new_arena_id && .@new_status && !getd(.@new_var_event$) && (.@new_total_guill_w < .@new_max_player || .@new_total_croix_w < .@new_max_player) && BaseLevel >= .@new_baselevel )
		{
			.@register_id = .@new_arena_id;
			.@register_type = 0;
			.@register_army = (.@new_total_guill_w<=.@new_total_croix_w?0:1);
		}
		else if( .@new_arena_id && .@new_status && getd(.@new_var_event$) && getd(.@new_var_event$) < .@new_var_lock && (.@new_total_guill_p < .@new_max_player || .@new_total_croix_p < .@new_max_player) && BaseLevel >= .@new_baselevel )
		{
			.@register_id = .@new_arena_id;
			.@register_type = 1;
			.@register_army = (.@new_total_guill_p<=.@new_total_croix_p?0:1);
		}
		else if( (.@last_arena_id && .@last_status && getd(.@last_var_event$) && getd(.@last_var_event$) < .@last_var_lock && (.@last_total_guill_p < .@last_max_player || .@last_total_croix_p < .@last_max_player) && BaseLevel < .@last_baselevel) || (.@new_arena_id && .@new_status && getd(.@new_var_event$) && getd(.@new_var_event$) < .@new_var_lock && (.@new_total_guill_p < .@new_max_player || .@new_total_croix_p < .@new_max_player) && BaseLevel < .@new_baselevel) )
		{
			message strcharinfo(0), "Você não pode entrar na arena por motivo do seu nível de Base.";
			end;
		}
		else {
			message strcharinfo(0), "Atualmente as arenas estão lotadas, você deve aguardar uma das Batalhas terminar para pode se registrar.";
			end;
		}
		
		// Cadastrando Jogador na Batalha.
		BG_KICK_COUNT = 0;
		if( !.@register_type )
		{
			if( callfunc("bg_queue_func", 2, getcharid(0), .@register_id, .@register_army) )
			{
				message strcharinfo(0), "Você foi alistado na Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] no Exército de [" + (.@register_army?"Croix":"Guillaume") + "].";
				callfunc "bg_circle_arena", strcharinfo(0), .@register_army, callfunc("bg_getarenainfo", .@register_id, "arena_name");
			}
			else {
				message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
				bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
			}
		}
		else {
			if( callfunc("bg_queue_func", 6, getcharid(0), .@register_id, .@register_army) )
			{
				set .@bg_team_id, getd("$@BG_"+.@register_id+"_id"+(.@register_army+1));
				add_bg_team .@bg_team_id, strcharinfo(0);
				if( getcharid(4) )
				{
					message strcharinfo(0), "A Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] está ocorrendo e você entra-rá no meio da partida no Exército de " + (.@register_army?"Croix":"Guillaume") + ".";
					sleep2 2000;
					doevent callfunc("bg_getarenainfo", .@register_id, "npc_newjoin_event");
				}
				else {
					message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
					bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
				}
			}
			else {
				message strcharinfo(0), "Erro ao registrar na fila de jogadores em jogo.";
				end;
			}
		}
	}
	else {
		// Módulo seletivo
		freeloop(1);
		
		// Variáveis de Progresso
		.@register_id = 0;
		.@register_army = 0;
		.@register_type = 0;
		.@blvl_error = 0;
		.@player_error = 0;
		
		// Pega as arenas que contém jogadores em jogo.
		query_sql "SELECT DISTINCT `bg_id` FROM `bg_queue_playing`", .@bg_id;
		
		for( .@i=0; .@i < getarraysize(.@bg_id) && !.@register_id; .@i++ )
		{
			.@group_status = callfunc("bg_getgroupinfo", callfunc("bg_getarenainfo", .@bg_id[.@i], "group_id"), "status");
			if( !.@group_status )
				continue;
				
			.@var_check = getd(callfunc("bg_getarenainfo", .@bg_id[.@i], "npc_var_event"));
			.@var_value = callfunc("bg_getarenainfo", .@bg_id[.@i], "npc_var_event_lock");
			
			if( .@var_check && .@var_check < .@var_value )
			{
				.@guill = callfunc("bg_queue_func", 5, .@bg_id[.@i], 0);
				.@croix = callfunc("bg_queue_func", 5, .@bg_id[.@i], 1);
				.@base_level = callfunc("bg_getarenainfo", .@bg_id[.@i], "base_level");
				.@max_player = callfunc("bg_getarenainfo", .@bg_id[.@i], "max_player");
				if( (.@guill < .@max_player || .@croix < .@max_player) && BaseLevel < .@base_level )
					.@blvl_error = 1;
				else if( (.@guill > .@max_player && .@croix > .@max_player) && .@base_level <= BaseLevel )
					.@player_error = 1;
				else if( .@guill < .@max_player && .@guill <= .@croix && .@base_level <= BaseLevel )
				{
					.@register_id = .@bg_id[.@i];
					.@register_army = 0;
					.@register_type = 1;
				}
				else if( .@croix < .@max_player && .@base_level <= BaseLevel )
				{
					.@register_id = .@bg_id[.@i];
					.@register_army = 1;
					.@register_type = 1;
				}
			}
		}
		
		// Caso nenhuma arena esteja em jogo, ele tenta pegar uma arena que está com jogadores aguardando.
		if( !.@register_id )
		{
			deletearray .@bg_id, getarraysize(.@bg_id);
			query_sql "SELECT DISTINCT `bg_id` FROM `bg_queue`", .@bg_id;
			for( .@i=0; .@i < getarraysize(.@bg_id) && !.@register_id; .@i++ )
			{
				.@group_status = callfunc("bg_getgroupinfo", callfunc("bg_getarenainfo", .@bg_id[.@i], "group_id"), "status");
				if( !.@group_status )
					continue;
				
				.@guill = callfunc("bg_queue_func", 1, .@bg_id[.@i], 0);
				.@croix = callfunc("bg_queue_func", 1, .@bg_id[.@i], 1);
				.@base_level = callfunc("bg_getarenainfo", .@bg_id[.@i], "base_level");
				.@min_player = callfunc("bg_getarenainfo", .@bg_id[.@i], "min_player");
				
				if( (.@guill < .@min_player || .@croix < .@min_player) && BaseLevel < .@base_level )
					.@blvl_error = 1;
				else if( (.@guill > .@min_player && .@croix > .@min_player) && .@base_level <= BaseLevel )
					.@player_error = 1;
				else if( .@croix < .@guill )
				{
					.@register_id = .@bg_id[.@i];
					.@register_army = 1;
				}
				else if( .@guill <= .@croix )
				{
					.@register_id = .@bg_id[.@i];
					.@register_army = 0;
				}
			}
		}
		
		// Caso nenhuma arena esteja em jogo ou em espera, vai nomear uma arena que não possue alistamentos.
		if( !.@register_id )
		{
			query_sql "SELECT `group_id` FROM `bg_groups` WHERE `status`='1'", .@groups;
			if( !getarraysize(.@groups) )
			{
				message strcharinfo(0), "Você não pode se alistar enquanto os grupos não forem carregados.";
				end;
			}
			
			deletearray .@tmp_bg_id, getarraysize(.@tmp_bg_id);
			for( .@g=0; .@g < getarraysize(.@groups); .@g++ )
			{
				deletearray .@bg_id, getarraysize(.@bg_id);
				if( !callfunc("bg_countarena",.@groups[.@g]) )
					continue;
					
				query_sql "SELECT `bg_id`, `base_level` FROM `bg_arena` WHERE `group_id`='" + .@groups[.@g] + "'", .@bg_id, .@base_level;
				for( .@i=0; .@i < getarraysize(.@bg_id); .@i++ )
				{
					.@guill = callfunc("bg_queue_func", 1, .@bg_id[.@i],0);
					.@croix = callfunc("bg_queue_func", 1, .@bg_id[.@i],1);
					if( .@base_level[.@i] > BaseLevel )
						.@blvl_error = 1;
					else if( .@guill || .@croix )
						.@player_error = 1;
					else
						.@tmp_bg_id[getarraysize(.@tmp_bg_id)] = .@bg_id[.@i];
				}
			}
			
			if( getarraysize(.@tmp_bg_id) )
			{
				.@register_id = .@tmp_bg_id[.@r];
				.@register_army = rand(0,1);
			}
			
		}
		
		// Caso não há um registro em aberto, ele exibe uma mensagem de erro.
		if( !.@register_id )
		{
			if( !.@blvl_error && !.@player_error )
				message strcharinfo(0), "Nenhuma arena disponível para alistamento.";
			if( .@blvl_error )
				message strcharinfo(0), "Há arenas disponível, mais seu nível de Base não é permitido nelas.";
			if( .@player_error )
				message strcharinfo(0), "Há arenas disponível, mais os já atingiram o limite de jogadores.";
			end;
		}
		else {
			// Cadastrando Jogador na Batalha.
			BG_KICK_COUNT = 0;
			if( !.@register_type )
			{
				if( callfunc("bg_queue_func", 2, getcharid(0), .@register_id, .@register_army) )
				{
					message strcharinfo(0), "Você foi alistado na Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] no Exército de [" + (.@register_army?"Croix":"Guillaume") + "].";
					callfunc "bg_seletive_arena", strcharinfo(0), .@register_army, callfunc("bg_getarenainfo", .@register_id, "arena_name");
				}
				else {
					message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
					bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
				}
			}
			else {
				if( callfunc("bg_queue_func", 6, getcharid(0), .@register_id, .@register_army) )
				{
					set .@bg_team_id, getd("$@BG_"+.@register_id+"_id"+(.@register_army+1));
					add_bg_team .@bg_team_id, strcharinfo(0);
					if( getcharid(4) )
					{
						message strcharinfo(0), "A Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] está ocorrendo e você entra-rá no meio da partida no Exército de " + (.@register_army?"Croix":"Guillaume") + ".";
						sleep2 2000;
						doevent callfunc("bg_getarenainfo", .@register_id, "npc_newjoin_event");
					}
					else {
						message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
						bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
					}
				}
				else {
					message strcharinfo(0), "Erro ao registrar na fila de jogadores em jogo.";
					end;
				}
			}
		}
		freeloop(0);
	}
	end;
}

// Remove um jogador alistado em uma Batalha.
//
-	script	bgcommand#unregister	-1,{
OnAtCommand:
	.@bg_id = callfunc("bg_getplayerbgid", getcharid(0), 0);
	
	if( !.@bg_id )
		message strcharinfo(0), "Você não está alistado em uma Batalha, utilize o comando @bgjoin/@bgregister para se alistar em uma.";
	else {
		.@army = callfunc("bg_getplayerarmy", getcharid(0), 0);
		callfunc "bg_queue_func", 3, getcharid(0);
		message strcharinfo(0), "Você desertou da Batalha em " + callfunc("bg_getarenainfo", .@bg_id, "arena_name") + ".";
		
		if( callfunc("bg_getconfiginfo", "ANNOUNCE") )
			announce "[Batalhas Campais]: O jogador [" + strcharinfo(0) + "] desertou do Exército de " + (!.@army?"Guillaume":"Croix") + " na Batalha em " + callfunc("bg_getarenainfo", .@bg_id, "arena_name") + ".", bc_all, "0xFFCE00";
	}
	end;
}

// Ranking das Batalhas Campais.
//
-	script	bgcommand#ranking	-1,{
OnAtCommand:
	query_sql "SELECT `group_id` FROM `bg_groups` WHERE `status`='1'", .@groups;
	
	if( !getarraysize(.@groups) )
	{
		message strcharinfo(0), "Você não pode utilizar este comando enquanto os grupos não estiverem carregado pelo sistema.";
		end;
	}
	
	.@bg_id = (.@atcmd_numparameters?atoi(.@atcmd_parameters$[0]):0);
	if( .@bg_id )
	{
		.@arena_group = callfunc("bg_getarenainfo", .@bg_id, "group_id");
		.@group_status = callfunc("bg_getgroupinfo", .@arena_group, "status");
	}
	else {
		.@arena_group = true;
		.@group_status = true;
	}
	
	if( !.@arena_group || !.@group_status )
	{
		message strcharinfo(0), "Id da arena inválida.";
		.@flag_error = 1;
	}
	else
	{
		query_sql "SELECT COUNT(`bg_ranking`.`bg_id`) FROM `bg_ranking`, `char` WHERE `bg_ranking`.`bg_id`='" + .@bg_id + "' AND `char`.`char_id`=`bg_ranking`.`char_id`", .@count;
		if( !.@count )
		{
			message strcharinfo(0), "Nenhum resultado encontrado, tente outra pesquisa.";
			.@flag_error = 1;
		}
		else {
			.@total_page = (!(.@count/127)?1:(.@count/127));
			
			if( .@atcmd_numparameters > 2 && atoi(.@atcmd_parameters$[2]) > .@total_page )
			{
				message strcharinfo(0), "O máximo de paginação é " + .@total_page + ".";
				message strcharinfo(0), "Você pode utilizar @bgranking " + .@bg_id + " " + .@atcmd_parameters$[1] + " <1~" + .@atcmd_parameters$[2] + ">.";
				end;
			}
			
			if( .@atcmd_numparameters > 1 )
			{
				.@f = atoi(.@atcmd_parameters$[1]);
				.@f = (.@f>2||.@f<0?0:.@f);
				.@filter$ = (!.@f?"`bg_ranking`.`wins` DESC, `bg_ranking`.`loss` DESC, `bg_ranking`.`ration` DESC":(.@f==1?"`bg_ranking`.`loss` DESC, `bg_ranking`.`wins` DESC, `bg_ranking`.`ration` DESC":"`bg_ranking`.`ration` DESC, `bg_ranking`.`wins` DESC, `bg_ranking`.`loss` DESC"));
			}
			else {
				.@f = 0;
				.@filter$ = "`bg_ranking`.`wins` DESC, `bg_ranking`.`loss` DESC, `bg_ranking`.`ration` DESC";
			}
			
			
			if( .@atcmd_numparameters < 3 || (.@atcmd_numparameters >= 3 && !atoi(.@atcmd_parameters$[2])) )
				.@page = 0;
			else
				.@page = atoi(.@atcmd_parameters$[2])-1;
			
			.@limit = callfunc("bg_getconfiginfo", "RANKING_ROWS");
			query_sql "SELECT `bg_ranking`.`char_id`, `bg_ranking`.`wins`, `bg_ranking`.`loss`, `bg_ranking`.`ration` FROM `bg_ranking`, `char` WHERE `bg_ranking`.`bg_id`='" + .@bg_id + "' AND `char`.`char_id`=`bg_ranking`.`char_id` ORDER BY " + .@filter$ + " LIMIT " + (.@page*127) + "," + .@limit, .@char_id, .@wins, .@loss, .@ration;
			
			message strcharinfo(0), "Ranking: " + (!atoi(.@atcmd_parameters$[0])?"Geral":callfunc("bg_getarenainfo", .@bg_id, "arena_name"));
			message strcharinfo(0), "Filtragem: " + (!.@f?"Por Vitória":(.@f==1?"Por Derrota":"Proporcional"));
			for( .@i=0; .@i < getarraysize(.@char_id); .@i++ )
			{
				message strcharinfo(0), " ";
				message strcharinfo(0), (.@page*127)+(.@i+1) + "º " + callfunc("bg_getcharname",.@char_id[.@i]);
				message strcharinfo(0), "      Vitórias: " + .@wins[.@i];
				message strcharinfo(0), "      Derrotas: " + .@loss[.@i];
				message strcharinfo(0), "      Proporção: " + .@ration[.@i];
			}
			
			message strcharinfo(0), " ";
			message strcharinfo(0), "Total de Resultados: " + .@count;
			message strcharinfo(0), "Total de Páginas: " + .@total_page;
			message strcharinfo(0), "Total de Resultados por Página: " + .@limit;
		}
	}
	
	if( .@flag_error )
	{
		message strcharinfo(0), "Para utilizar o ranking digite @bgranking <id da arena> <filtro> <página>";
		message strcharinfo(0), " ";
		message strcharinfo(0), "  Ids das Arenas (Opcional):";
		message strcharinfo(0), "        0 - Ranking Geral (Todas as arenas, Padrão)";
		for( .@i=0; .@i < getarraysize(.@groups); .@i++ )
		{
			deletearray .@bg_id, getarraysize(.@bg_id);
			query_sql "SELECT `bg_id`, `arena_name` FROM `bg_arena` WHERE `group_id`='" + .@groups[.@i] + "'", .@bg_id, .@a_name$;
			for( .@a=0; .@a < getarraysize(.@bg_id); .@a++ )
				message strcharinfo(0), "      " + (.@bg_id[.@a]<=9?"  ":"") + .@bg_id[.@a] + " - " + .@a_name$[.@a];
		}
		message strcharinfo(0), " ";
		message strcharinfo(0), "  Filtros (Opcional):";
		message strcharinfo(0), "      0: Filtrar por Vitória (Padrão)";
		message strcharinfo(0), "      1: Filtrar por Derrota";
		message strcharinfo(0), "      2: Filtrar Proporcionalmente";
		message strcharinfo(0), " ";
		message strcharinfo(0), " Página (Opcional): Padrão 1ª página de exibição.";
	}
	end;
}

// Lista de Espera/Em Jogo das Batalhas Campais.
//
-	script	bgcommand#waiting_playing	-1,{
OnAtCommand:
	.@table$ = (.@atcmd_command$=="@bgplaying"?"bg_queue_playing":"bg_queue");
	query_sql "SELECT `group_id` FROM `bg_groups` WHERE `status`='1'", .@groups;
	
	if( !getarraysize(.@groups) )
	{
		message strcharinfo(0), "Você não pode utilizar este comando enquanto os grupos não estiverem carregado pelo sistema.";
		end;
	}
	
	.@bg_id = (.@atcmd_numparameters?atoi(.@atcmd_parameters$[0]):0);
	if( .@bg_id )
	{
		.@arena_group = callfunc("bg_getarenainfo", .@bg_id, "group_id");
		.@group_status = callfunc("bg_getgroupinfo", .@arena_group, "status");
	}
	else {
		.@arena_group = true;
		.@group_status = true;
	}
	
	if( !.@arena_group || !.@group_status || !.@atcmd_numparameters || !atoi(.@atcmd_parameters$[0]) )
	{
		message strcharinfo(0), "Id da arena inválida.";
		.@flag_error = 1;
	}
	else {
		if( .@atcmd_numparameters > 1 )
			.@f = atoi(.@atcmd_parameters$[1]);
		else
			.@f = 2;
		
		query_sql "SELECT `" + .@table$ + "`.`char_id`, `" + .@table$ + "`.`bg_team` FROM `" + .@table$ + "`, `char` WHERE `" + .@table$ + "`.`bg_id`='" + .@bg_id + "' AND `char`.`char_id`=`" + .@table$ + "`.`char_id` AND `char`.`online`='1' AND `" + .@table$ + "`." + (.@f<2?"`bg_team`='" + .@f + "'":"`bg_team`<='1'") + " ORDER BY " + .@table$ + ".`bg_team`", .@char_id, .@bg_team;

		if( !getarraysize(.@char_id) )
		{
			message strcharinfo(0), "Nenhum resultado encontrado, tente outra pesquisa.";
			.@flag_error = 1;
		}
		else {
			message strcharinfo(0), "Lista de Jogadores em " + (.@atcmd_command$=="@bgplaying"?"Jogo":"Espera") + ": " + callfunc("bg_getarenainfo", .@bg_id, "arena_name");
			message strcharinfo(0), "Exército: " + (!.@f?"Guillaume":(.@f==1?"Croix":"Ambos"));
			
			for( .@i=0; .@i < getarraysize(.@char_id); .@i++ )
				message strcharinfo(0), callfunc("bg_getcharname",.@char_id[.@i]) + " - Exército de " + (.@bg_team[.@i]?"Croix":"Guillaume");
		}
	}
	
	if( .@flag_error )
	{
		message strcharinfo(0), "Para utilizar o comando digite @bgwaiting <id da arena> <exército>";
		message strcharinfo(0), " ";
		for( .@i=0; .@i < getarraysize(.@groups); .@i++ )
		{
			deletearray .@bg_id, getarraysize(.@bg_id);
			query_sql "SELECT `bg_id`, `arena_name` FROM `bg_arena` WHERE `group_id`='" + .@groups[.@i] + "'", .@bg_id, .@a_name$;
			for( .@a=0; .@a < getarraysize(.@bg_id); .@a++ )
				message strcharinfo(0), "      " + (.@bg_id[.@a]<=9?"  ":"") + .@bg_id[.@a] + " - " + .@a_name$[.@a];
		}
		message strcharinfo(0), " ";
		message strcharinfo(0), "  Exército (Opcional):";
		message strcharinfo(0), "      0: Guillaume";
		message strcharinfo(0), "      1: Croix";
		message strcharinfo(0), "      2: Ambos";
	}
}

-	script	bgcommand#register	-1,{
OnAtCommand:
	.@mode = callfunc("bg_getconfiginfo", "ARENA_MODE");
	if( callfunc("bg_getplayerbgid", getcharid(0), 0) )
		message strcharinfo(0), "Você já está registrado em uma Batalha, utilize o comando @bgunregister para desertar do alistamento.";
	else if( callfunc("bg_getplayerbgid", getcharid(0), 1) )
		message strcharinfo(0), "Você estava em uma Batalha, você deve aguardar até que a Batalha termine para poder se alistar novamente.";
	else if( .@mode )
	{
		// Modo Circular
		if( $BG_LAST_ARENA )
		{
			.@last_arena_id = $BG_LAST_ARENA;
			.@last_arena_group = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "group_id");
			.@last_var_event$ = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event");
			.@last_var_lock = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event_lock");
			.@last_max_player = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "max_player");
			.@last_status = callfunc("bg_getgroupinfo", .@last_arena_group, "status");
			.@last_total_guill_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 0);
			.@last_total_croix_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 1);
			.@last_baselevel = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "base_level");
		}
		
		if( $BG_ARENA )
		{
			.@new_arena_id = $BG_ARENA;
			.@new_arena_group = callfunc("bg_getarenainfo", $BG_ARENA, "group_id");
			.@new_var_event$ = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event");
			.@new_var_lock = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event_lock");
			.@new_max_player = callfunc("bg_getarenainfo", $BG_ARENA, "max_player");
			.@new_status = callfunc("bg_getgroupinfo", .@new_arena_group, "status");
			.@new_total_guill_w = callfunc("bg_queue_func", 1, $BG_ARENA, 0);
			.@new_total_croix_w = callfunc("bg_queue_func", 1, $BG_ARENA, 1);
			.@new_total_guill_p = callfunc("bg_queue_func", 5, $BG_ARENA, 0);
			.@new_total_croix_p = callfunc("bg_queue_func", 5, $BG_ARENA, 1);
			.@new_baselevel = callfunc("bg_getarenainfo", $BG_ARENA, "base_level");
		}
		
		if( .@last_arena_id && .@last_status && getd(.@last_var_event$) && getd(.@last_var_event$) < .@last_var_lock && (.@last_total_guill_p < .@last_max_player || .@last_total_croix_p < .@last_max_player) && BaseLevel >= .@last_baselevel )
		{
			.@register1_id = .@last_arena_id;
			.@register1_type = 1;
			.@register1_army = (.@last_total_guill_p<=.@last_total_croix_p?0:1);
			
			if( .@last_total_guill_p < .@last_max_player )
				.@register1_army1 = 1;
			if( .@last_total_croix_p < .@last_max_player )
				.@register1_army2 = 1;
		}
		
		if( .@new_arena_id && .@new_status && !getd(.@new_var_event$) && (.@new_total_guill_w < .@new_max_player || .@new_total_croix_w < .@new_max_player) && BaseLevel >= .@new_baselevel )
		{
			.@register2_id = .@new_arena_id;
			.@register2_type = 0;
			.@register2_army = (.@new_total_guill_w<=.@new_total_croix_w?0:1);
			
			if( .@new_total_guill_p < .@new_max_player )
				.@register2_army1 = 1;
			if( .@new_total_croix_p < .@new_max_player )
				.@register2_army2 = 1;
		}
		else if( .@new_arena_id && .@new_status && getd(.@new_var_event$) && getd(.@new_var_event$) < .@new_var_lock && (.@new_total_guill_p < .@new_max_player || .@new_total_croix_p < .@new_max_player) && BaseLevel >= .@new_baselevel )
		{
			.@register2_id = .@new_arena_id;
			.@register2_type = 1;
			.@register2_army = (.@new_total_guill_p<=.@new_total_croix_p?0:1);
			
			if( .@new_total_guill_p < .@new_max_player )
				.@register2_army1 = 1;
			if( .@new_total_croix_p < .@new_max_player )
				.@register2_army2 = 1;
		}
		
		if( (.@last_arena_id && .@last_status && getd(.@last_var_event$) && getd(.@last_var_event$) < .@last_var_lock && (.@last_total_guill_p < .@last_max_player || .@last_total_croix_p < .@last_max_player) && BaseLevel < .@last_baselevel) || (.@new_arena_id && .@new_status && getd(.@new_var_event$) && getd(.@new_var_event$) < .@new_var_lock && (.@new_total_guill_p < .@new_max_player || .@new_total_croix_p < .@new_max_player) && BaseLevel < .@new_baselevel) )
		{
			message strcharinfo(0), "Você não pode entrar na arena por motivo do seu nível de Base.";
			end;
		}
		
		if( !.@register1_id && !.@register2_id ) {
			message strcharinfo(0), "Atualmente as arenas estão lotadas, você deve aguardar uma das Batalhas terminar para pode se registrar.";
			end;
		}
		
		mes "^FF0000[Recrutador das Batalhas]^000000";
		mes "Bem-vindo ao sistema de recrutamento das ^FF0000Batalhas Campais^000000, vou ajudar a escolher a batalha mais adequada a você.";
		mes "O primeiro passo é selecionar uma ^0000FFBatalha^000000, então vamos lá!";
		next;
		.@choose = select((.@register1_id?"- " + callfunc("bg_getarenainfo", .@register1_id, "arena_name") + ".":""), (.@register2_id?"- " + callfunc("bg_getarenainfo", .@register2_id, "arena_name") + ".":""), "^FF0000- Cancelar.^000000");
		switch(.@choose)
		{
			default:
				.@loop_1 = 1;
				.@register_id = getd(".@register"+.@choose+"_id");
				.@register_army = getd(".@register"+.@choose+"_army");
				.@register_army1 = getd(".@register"+.@choose+"_army1");
				.@register_army2 = getd(".@register"+.@choose+"_army2");
				while(.@loop_1)
				{
					mes "^FF0000[Recrutador das Batalhas]^000000";
					mes "Muito bem, selecione o ^0000FFExército^000000 no qual deseja se alistar.";
					next;
					.@choose2 = select((.@register_army1&&.@register_army2?"- Qualquer Exército.":""), (.@register_army1?"- Exército de Guillaume.":""), (.@register_army2?"- Exército de Croix.":""), "^FFA500- Voltar.", "^FF0000- Cancelar.^000000");
					switch(.@choose2)
					{
						default:
							if( .@choose2 == 1 )
								.@army = .@register_army;
							else if( .@choose2 == 2 )
								.@army = 0;
							else
								.@army = 1;
								
							mes "^FF0000[Recrutador das Batalhas]^000000";
							mes "Tem certeza que deseja se alistar no ^FF0000Exército de " + (!.@army?"Guillaume":"Croix") + "^000000 nas Batalhas em ^0000FF" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "^000000.";
							next;
							if( select("- Sim.", "^FF0000- Não, obrigado.^000000") == 2 )
								break;
								
							mes "^FF0000[Recrutador das Batalhas]^000000";
							mes "Muito bem, vamos tentar concluír seu alistamento!";
							close2;
							.@check = callsub(CheckArena, .@register_id, .@army);
							switch(.@check)
							{
								case 0:
									message strcharinfo(0), "A arena no qual você está tentando registrar não está mais disponível.";
									end;
								case 3:
									message strcharinfo(0), "A arena no qual você está tentando registrar atingiu o máximo de jogadores no Exército.";
									end;
								case 4:
									message strcharinfo(0), "A arena no qual você está tentando registrar não permite o seu Nível de Base.";
									end;
								default:
									// Cadastrando Jogador na Batalha.
									BG_KICK_COUNT = 0;
									if( .@check == 1 )
									{
										if( callfunc("bg_queue_func", 2, getcharid(0), .@register_id, .@army) )
										{
											message strcharinfo(0), "Você foi alistado na Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] no Exército de [" + (.@army?"Croix":"Guillaume") + "].";
											callfunc "bg_circle_arena", strcharinfo(0), .@army, callfunc("bg_getarenainfo", .@register_id, "arena_name");
										}
										else {
											message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
											bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
										}
									}
									else {
										if( callfunc("bg_queue_func", 6, getcharid(0), .@register_id, .@army) )
										{
											set .@bg_team_id, getd("$@BG_"+.@register_id+"_id"+(.@army+1));
											add_bg_team .@bg_team_id, strcharinfo(0);
											if( getcharid(4) )
											{
												message strcharinfo(0), "A Batalha Campais [" + callfunc("bg_getarenainfo", .@register_id, "arena_name") + "] está ocorrendo e você entra-rá no meio da partida no Exército de " + (.@army?"Croix":"Guillaume") + ".";
												sleep2 2000;
												doevent callfunc("bg_getarenainfo", .@register_id, "npc_newjoin_event");
											}
											else {
												message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
												bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
											}
										}
										else {
											message strcharinfo(0), "Erro ao registrar na fila de jogadores em jogo.";
											end;
										}
									}
									break;
							}
							end;
						case 4:
							callfunc "bg_info_npc", .@register_id, "Recrutador das Batalhas";
							break;
						case 5:
							.@loop_1 = 0;
							break;
					}
				}
				break;
			case 3:
				break;
		}
		
		mes "^FF0000[Recrutador das Batalhas]^000000";
		mes "Tudo bem, volte quando desejar utilizar o sistema de Recrutamento.";
		close;	
	}
	else {
		// Modo Seletivo
		.@loop_1 = 1;
		while(.@loop_1)
		{
			mes "^FF0000[Recrutador das Batalhas]^000000";
			mes "Bem-vindo ao sistema de recrutamento das ^FF0000Batalhas Campais^000000, vou ajudar a escolher a batalha mais adequada a você.";
			mes "O primeiro passo é selecionar uma ^0000FFBatalha^000000, então vamos lá!";
			next;
			.@build_menu$ = "";
			deletearray .@groups, getarraysize(.@groups);
			query_sql "SELECT `group_id`, `name` FROM `bg_groups` WHERE `status`='1' ORDER BY `name` ASC", .@groups, .@gname$;
			for( .@g=0; .@g < getarraysize(.@groups); .@g++ )
				.@build_menu$ += (callfunc("bg_countarena", .@groups[.@g])?"- " + .@gname$[.@g] + ".":"")+":";
		
			.@choose = select(.@build_menu$+"^FF0000- Cancelar.^000000")-1;
		
			if( .@choose >= getarraysize(.@groups) )
				break;
			else if( .@choose < getarraysize(.@groups) )
			{
				.@loop_2 = 1;
				while(.@loop_2)
				{
					mes "^FF0000[Recrutador das Batalhas]^000000";
					mes "Muito bem, escolha uma arena em ^0000FF" + .@gname$[.@choose] + "^000000.";
					next;
					.@build_menu$ = "";
					deletearray .@bg_id, getarraysize(.@bg_id);
					query_sql "SELECT `bg_id`, `arena_name`, `base_level`, `min_player`, `max_player`, `score_round`, `event_timer`, `reward` FROM `bg_arena` WHERE `group_id`='" + .@groups[.@choose] + "' ORDER BY `arena_name` ASC", .@bg_id, .@name$, .@base_level, .@min_player, .@max_player, .@score_round, .@event_timer, .@reward;
					for( .@a=0; .@a < getarraysize(.@bg_id); .@a++ )
						.@build_menu$ += "- " + .@name$[.@a] + ".:";
					
					.@choose2 = select(.@build_menu$+"^FFA500- Voltar.:^FF0000- Cancelar.^000000")-1;
					if( .@choose2 == getarraysize(.@bg_id) )
						break;
					else if( .@choose2 > getarraysize(.@bg_id) )
					{
						.@loop_1 = 0;
						break;
					}
					else {
						.@loop_3 = 1;
						while(.@loop_3)
						{
							mes "^FF0000[Recrutador das Batalhas]^000000";
							mes "Escolha o Exército que deseja se alistar nas batalhas em ^0000FF" + .@name$[.@choose2] + "^000000.";
							next;
							.@choose3 = select("- Qualquer Exército.", "- Exército de Guillaume.", "- Exército de Croix.", "^0000FF- Informações.^000000", "^FFA500- Voltar.","^FF0000- Cancelar.^000000")-1;
							switch(.@choose3)
							{
								default:
									if( BaseLevel < .@base_level[.@choose2] )
									{
										mes "^FF0000[Recrutador das Batalhas]^000000";
										mes "Você precisa ter no mínimo ^0000FF" + .@base_level[.@choose3] + "^000000 para se alistar nesta batalha.";
										next;
										break;
									}
									else if( !.@choose3 )
									{
										.@var_check = getd(callfunc("bg_getarenainfo",.@bg_id[.@choose2],"npc_var_event"));
										.@var_value = callfunc("bg_getarenainfo",.@bg_id[.@choose2],"npc_var_event_lock");
										if( .@var_check && .@var_check < .@var_value )
										{
											if( callfunc("bg_queue_func", 5, .@bg_id[.@choose2],0) <= .@max_player[.@choose2] )
												.@army = 0;
											else
												.@army = 1;
										}
										else {
											if( callfunc("bg_queue_func", 1, .@bg_id[.@choose2],0) <= callfunc("bg_queue_func", 1, .@bg_id[.@choose2],1) )
												.@army = 0;
											else
												.@army = 1;
										}
									}
									else
										.@army = (.@choose3-1);
										
									mes "^FF0000[Recrutador das Batalhas]^000000";
									mes "Tem certeza que deseja que deseja se alistar no ^FF0000Exército de " + (!.@army?"Guillaume":"Croix") + "^000000 nas batalhas em ^0000FF" + .@name$[.@choose2] + "^000000?";
									next;
									switch( select("- Sim, alistar agora.", "^FFA500- Voltar.", "^FF0000- Cancelar.^000000") )
									{
										case 1:
											mes "^FF0000[Recrutador das Batalhas]^000000";
											mes "O Processo de alistamento irá processar se há uma Batalha acontecendo.";
											mes "Caso uma batalha esteja acontecendo haja vagas no Exército selecionado, você será designado a ela no mesmo istante, o contrário você será agendado na próxima batalha.";
											mes "Feche esta janela para concluír seu alistamento Soldado.";
											close2;
											BG_KICK_COUNT = 0;
											.@var_check = getd(callfunc("bg_getarenainfo",.@bg_id[.@choose2],"npc_var_event"));
											.@var_value = callfunc("bg_getarenainfo",.@bg_id[.@choose2],"npc_var_event_lock");
											.@max_player = callfunc("bg_getarenainfo",.@bg_id[.@choose2],"max_player");
											.@playing = callfunc("bg_queue_func", 5, .@bg_id[.@choose2],.@army);
											
											if( .@var_check && .@var_check < .@var_value && .@playing < .@max_player[.@choose2] )
											{
												if( callfunc("bg_queue_func", 6, getcharid(0), .@bg_id[.@choose2], .@army) )
												{
													set .@bg_team_id, getd("$@BG_"+.@bg_id[.@choose2]+"_id"+(.@army+1));
													add_bg_team .@bg_team_id, strcharinfo(0);
													if( getcharid(4) )
													{
														message strcharinfo(0), "A Batalha Campais [" + .@name$[.@choose2] + "] está ocorrendo e você entra-rá no meio da partida no Exército de " + (.@army?"Croix":"Guillaume") + ".";
														sleep2 2000;
														doevent callfunc("bg_getarenainfo", .@bg_id[.@choose2], "npc_newjoin_event");
													}
													else {
														message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
														bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
													}
												}
												else {
													message strcharinfo(0), "Erro ao registrar na fila de jogadores em jogo.";
													end;
												}
											}
											else{
												if( callfunc("bg_queue_func", 2, getcharid(0), .@bg_id[.@choose2], .@army) )
												{
													message strcharinfo(0), "Você foi alistado na Batalha Campais [" + .@name$[.@choose2] + "] no Exército de [" + (.@army?"Croix":"Guillaume") + "].";
													callfunc "bg_seletive_arena", strcharinfo(0), .@army, .@name$[.@choose2];
												}
												else {
													message strcharinfo(0), "Houve um erro no alistamento, reporte ao administrador do sistema.";
													bg_console "Erro ao cadastrar o jogador [" + strcharinfo(0) + "] nas Batalhas Campais, a batalha nao estava ocorrendo.";
												}
											}
											end;
										case 2:
											break;
										case 3:
											.@loop_3 = 0;
											.@loop_2 = 0;
											.@loop_1 = 0;
											break;
									}
									break;
								case 3:
									// Informações
									callfunc "bg_info_npc", .@bg_id[.@choose2], "Recrutador das Batalhas";
									break;
								case 4:
									.@loop_3 = 0;
									break;
								case 5:
									.@loop_3 = 0;
									.@loop_2 = 0;
									.@loop_1 = 0;
									break;
							}
						}
					}
				}
			}
		}
		
		mes "^FF0000[Recrutador das Batalhas]^000000";
		mes "Volte quando desejar se alistar em uma Batalhar.";
		close;
	}
	end;

//
//	CheckArena(bg_id, army)
//
// Return types:
//		0: Arena não está disponível.
//		1: O alistamento pode ser feito em queue.
//		2: O jogador já pode entrar no jogo.
//		3: Atingiu o máximo de Jogadores
//		4: O Nível de Base não é equivalente.
//
CheckArena:
	if( getarg(0) != $BG_LAST_ARENA && getarg(0) != $BG_ARENA )
		return 0;
	else
		.@type = (getarg(0)==$BG_LAST_ARENA?0:1);
		
	if( .@type == 0 )
	{
		if( $BG_LAST_ARENA )
		{
			.@last_arena_group = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "group_id");
			.@last_var_event$ = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event");
			.@last_var_lock = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "npc_var_event_lock");
			.@last_max_player = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "max_player");
			.@last_status = callfunc("bg_getgroupinfo", .@last_arena_group, "status");
			.@last_total_guill_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 0);
			.@last_total_croix_p = callfunc("bg_queue_func", 5, $BG_LAST_ARENA, 1);
			.@last_baselevel = callfunc("bg_getarenainfo", $BG_LAST_ARENA, "base_level");
			
			debugmes .@last_arena_group;
			debugmes .@last_var_event$;
			debugmes getd(.@last_var_event$);
			debugmes .@last_status;
			if( (.@last_status && getd(.@last_var_event$) && getd(.@last_var_event$) < .@last_var_lock) || (.@last_status && !getd(.@last_var_event$)) )
			{
				if( (!getarg(0) && .@last_total_guill_p >= .@last_max_player) || (getarg(0) && .@last_total_croix_p >= .@last_max_player) )
					return 3;
					
				if( BaseLevel < .@last_baselevel )
					return 4;
				
				return 2;
			}
		}
	}
	else if( .@type == 1 )
	{
		if( $BG_ARENA )
		{
			.@new_arena_group = callfunc("bg_getarenainfo", $BG_ARENA, "group_id");
			.@new_var_event$ = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event");
			.@new_var_lock = callfunc("bg_getarenainfo", $BG_ARENA, "npc_var_event_lock");
			.@new_max_player = callfunc("bg_getarenainfo", $BG_ARENA, "max_player");
			.@new_status = callfunc("bg_getgroupinfo", .@new_arena_group, "status");
			.@new_total_guill_w = callfunc("bg_queue_func", 1, $BG_ARENA, 0);
			.@new_total_croix_w = callfunc("bg_queue_func", 1, $BG_ARENA, 1);
			.@new_total_guill_p = callfunc("bg_queue_func", 5, $BG_ARENA, 0);
			.@new_total_croix_p = callfunc("bg_queue_func", 5, $BG_ARENA, 1);
			.@new_baselevel = callfunc("bg_getarenainfo", $BG_ARENA, "base_level");
			
			if( .@new_status && !getd(.@new_var_event$) )
			{
				if( (!getarg(1) && .@new_total_guill_w >= .@new_max_player) || (getarg(1) && .@new_total_croix_w >= .@new_max_player) )
					return 3;
					
				if( BaseLevel < .@new_baselevel )
					return 4;
				
				return 1;
			}
			else if( .@new_status && getd(.@new_var_event$) && getd(.@new_var_event$) < .@new_var_lock )
			{
				if( BaseLevel < .@new_baselevel )
					return 4;
				
				if( (!getarg(1) && .@new_total_guill_p >= .@new_max_player) || (getarg(1) && .@new_total_croix_p >= .@new_max_player) )
					return 3;
				
				return 2;
			}
		}
	}
	return 0;
}